name: Build, Test and Publish Package

on:
  workflow_call:
    inputs:
      vault_version:
        description: Vault version
        type: string
      path:
        description: 'Path to package.json'
        required: true
        type: string
      bump:
        description: |-
          How to bump the package version:
          - `none` - do not bump version and do not publish
          - `patch` - bump patch version
          - `minor` - bump minor version
          - `major` - bump major version
        required: false
        default: none
        type: string
    secrets:
      CICD_RELEASES_PAT:
        description: 'Personal Access Token for pushing changes to repository'
        required: true
      PVAULT_SERVICE_LICENSE:
        description: 'Vault license for testing'
        required: true
      NPM_REGISTRY_TOKEN:
        description: 'Token for NPM registry'
        required: true

# Necessary for AWS assume role.
permissions:
  id-token: write
  contents: read

jobs:
  build-test-publish:
    name: Build, Test & Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # By default, the ref is the commit hash that triggered the original workflow.
          # Meaning it is missing changes that are committed by the workflow itself.
          # Explicitly set ref to the branch name, so we pull the latest changes committed by the CI.
          ref: ${{ github.ref_name }}
          token: ${{ secrets.CICD_RELEASES_PAT }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Bump version
        id: bump
        if: inputs.bump != 'none'
        run: |
          echo "old_version=$(jq -r '.version' ${{ inputs.path }}/package.json)" >> $GITHUB_OUTPUT

          pnpm version -C ${{ inputs.path }} \
            --no-git-tag-version \
            --no-commit-hooks \
            ${{ inputs.bump }}
          
          echo "package_name=$(jq -r '.name' ${{ inputs.path }}/package.json)" >> $GITHUB_OUTPUT
          echo "version=$(jq -r '.version' ${{ inputs.path }}/package.json)" >> $GITHUB_OUTPUT

      - name: Update readme
        run: |
          README_FILE=${{ inputs.path }}/README.md
          OLD_VER=${{ steps.bump.outputs.old_version }}
          NEW_VER=${{ steps.bump.outputs.version }}
          
          echo "Replacing ${OLD_VER} with ${NEW_VER} in ${README_FILE}"
          sed -i "s/${OLD_VER}.js/${NEW_VER}.js/g" ${README_FILE}

      - name: Install dependencies
        run: pnpm -C ${{ inputs.path }} i --frozen-lockfile

      - name: Bump @piiano dependencies
        run: pnpm -C ${{ inputs.path }} update "@piiano/*"

      - name: Run build
        run: pnpm -C ${{ inputs.path }} run build
        env:
          VAULT_VERSION: ${{ inputs.vault_version }}

      - name: Run tests
        run: pnpm -C ${{ inputs.path }} run test
        env:
          VAULT_VERSION: ${{ inputs.vault_version }}
          PVAULT_SERVICE_LICENSE: ${{ secrets.PVAULT_SERVICE_LICENSE }}

      - name: Configure aws credentials
        if: inputs.bump != 'none' && github.ref_name == 'main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::202832695688:role/vault-saas-prod-piiano-vault-typescript-github-actions
          aws-region: us-east-2

      - name: Configure NPM credentials
        if: inputs.bump != 'none' && github.ref_name == 'main'
        run: |
          cat <<EOF >.npmrc
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_REGISTRY_TOKEN }}
          EOF

      - name: Commit changes
        if: inputs.bump != 'none' && github.ref_name == 'main'
        run: |
          git config --global user.email "cicd@piiano.com"
          git config --global user.name "Github Actions"
          git add pnpm-lock.yaml ${{ inputs.path }}/package.json ${{ inputs.path }}/README.md
          git status
          git commit -m "chore: bump ${{ steps.bump.outputs.package_name }} to ${{ steps.bump.outputs.version }}"

      - name: Publish package
        if: inputs.bump != 'none' && github.ref_name == 'main'
        run: pnpm -C ${{ inputs.path }} run push

      - name: Push changes
        if: inputs.bump != 'none' && github.ref_name == 'main'
        run: |
          git push
